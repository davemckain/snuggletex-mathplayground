<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Ant Build File for the MathPlayground area                              -->
<!--                                                                         -->
<!-- $Id$                      -->
<!-- ======================================================================= -->
<project name="MathPlayground" default="webapp" basedir=".">

  <!-- Deployment properties file -->
  <property file="deploy.properties"/>

  <!-- General Properties file defining the layout of the project -->
  <property file="build.properties"/>

  <!-- Defines version number properties -->
  <property file="version.properties"/>

  <!-- =================================================================== -->
  <!-- ClassPaths                                                          -->
  <!-- =================================================================== -->

  <!-- Compilation ClassPath -->
  <path id="compile.classpath">
    <pathelement location="${build.lib.dir}/ph-commons-util.jar"/>
    <pathelement location="${build.lib.dir}/snuggletex.jar"/>
    <pathelement location="${build.lib.dir}/log4j-1.2.14.jar"/>
  </path>

  <!-- ClassPath for compiling the Test Suite -->
  <path id="test.compile.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="${build.lib.dir}/ph-commons-testutils.jar"/>
    <pathelement location="${build.lib.dir}/junit-4.4.jar"/>
    <pathelement location="${build.lib.dir}/easymock.jar"/>
  </path>

  <!-- ClassPath for compiling the playground webapp -->
  <path id="webapp.compile.classpath">
    <path refid="compile.classpath"/>
    <pathelement location="${build.lib.dir}/servlet-api.jar"/>
  </path>

  <!-- ClassPath for running the Test Suite -->
  <path id="test.run.classpath">
    <pathelement location="${build.test.dir}"/>
    <pathelement location="${build.src.dir}"/>
    <path refid="test.compile.classpath"/>
    <fileset dir="${build.lib.dir}">
      <include name="saxon9*.jar"/>
    </fileset>
  </path>

  <!-- ClassPath for running standalone apps (+ extensions) -->
  <path id="run.classpath">
    <pathelement location="${build.src.dir}"/>
    <pathelement location="${build.webapp.dir}/WEB-INF/classes"/>
    <path refid="compile.classpath"/>
    <fileset dir="${build.lib.dir}">
      <include name="batik-*.jar"/>
      <include name="commons-*.jar"/>
      <include name="saxon9*.jar"/>
      <include name="xml*.jar"/>
      <include name="jeuclid*.jar"/>
    </fileset>
  </path>

  <!-- =================================================================== -->
  <!-- Usual Ant initialisation target                                     -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build and generated source directories.                -->
  <!-- =================================================================== -->
  <target name="prepare.dirs" depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.lib.dir}"/>
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.test.dir}"/>
    <mkdir dir="${build.webapp.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares 3rd party libraries, flattening the vendor/version         -->
  <!-- hierarchy that we use to make it easier to reference them.          -->
  <!-- =================================================================== -->
  <target name="prepare.libs" depends="prepare.dirs">
    <copy todir="${build.lib.dir}" flatten="true">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
        <exclude name="**/src.jar"/>
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Builds the main SnuggleTeX Java files                               -->
  <!-- =================================================================== -->
  <target name="build" depends="prepare.libs">
    <!-- Compile Java files -->
    <javac destdir="${build.src.dir}"
        debug="true"
        source="1.5"
        target="1.5"
        deprecation="on">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="compile.classpath"/>
      <src path="${src.dir}"/>
    </javac>
    <!-- Copy other resources files -->
    <copy todir="${build.src.dir}">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java"/>
        <exclude name="**/package.html"/>
      </fileset>
      <filterset>
        <filtersfile file="version.properties"/>
      </filterset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the Java test code                                         -->
  <!-- =================================================================== -->
  <target name="build.test" depends="prepare.libs, build">
    <javac destdir="${build.test.dir}"
        debug="true"
        source="1.5"
        target="1.5"
        deprecation="on">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="compile.classpath"/>
      <classpath refid="test.compile.classpath"/>
      <classpath path="${build.src.dir}"/>
      <src path="${test.dir}"/>
    </javac>
    <!-- Copy non-Java files -->
    <copy todir="${build.test.dir}">
      <fileset dir="${test.dir}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Runs the JUnit Test Suite                                           -->
  <!-- =================================================================== -->
  <target name="test" depends="build.test" description="Runs Test Suite">
    <java classname="org.junit.runner.JUnitCore" fork="yes">
      <arg value="uk.ac.ed.ph.mathplayground.SnuggleTeXTestSuite"/>
      <classpath refid="test.run.classpath"/>
    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Builds the demo webapp hierarchy                                    -->
  <!-- =================================================================== -->
  <target name="webapp" depends="prepare.libs, build"
      description="Builds demo webapp (without JavaDoc)">
    <mkdir dir="${build.webapp.dir}/WEB-INF"/>
    <mkdir dir="${build.webapp.dir}/WEB-INF/classes"/>
    <!-- Compile webapp -->
    <javac destdir="${build.webapp.dir}/WEB-INF/classes"
        debug="true"
        source="1.5"
        target="1.5"
        deprecation="on">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="webapp.compile.classpath"/>
      <classpath path="${build.src.dir}"/>
      <src path="${webapp.java.dir}"/>
    </javac>
    <!-- Copy in project class files -->
    <copy todir="${build.webapp.dir}/WEB-INF/classes">
      <fileset dir="${build.src.dir}">
        <include name="**/*.class"/>
      </fileset>
    </copy>
    <!-- Copy in static files, being careful with filtering -->
    <copy todir="${build.webapp.dir}">
      <fileset dir="${webapp.dir}">
        <include name="**/*.jpg"/>
      </fileset>
    </copy>
    <copy todir="${build.webapp.dir}">
      <fileset dir="${webapp.dir}">
        <exclude name="**/*.jpg"/>
      </fileset>
      <filterset>
        <filtersfile file="deploy.properties"/>
        <filtersfile file="version.properties"/>
      </filterset>
    </copy>
    <!-- Add in project XSLT files -->
    <copy todir="${build.webapp.dir}/WEB-INF">
      <fileset dir="${basedir}/xsl">
        <include name="**.xsl"/>
      </fileset>
    </copy>
    <!-- Add in snuggletex.jar + Saxon 9 JARs. -->
    <copy todir="${build.webapp.dir}/WEB-INF/lib">
      <fileset dir="${build.lib.dir}">
        <include name="snuggletex.jar"/>
        <include name="saxon9*.jar"/>
        <include name="log4j*.jar"/>
        <include name="ph-commons-util.jar"/>
      </fileset>
    </copy>
    <!-- Extract the SnuggleTeX up-conversion extensions XSLT into WEB-INF/classes so
         that I can play around with these if necessary. -->
    <unzip src="${build.lib.dir}/snuggletex.jar" dest="${build.webapp.dir}/WEB-INF/classes">
      <patternset>
        <include name="uk/ac/ed/ph/snuggletex/extensions/upconversion/*.xsl"/>
      </patternset>
    </unzip>
  </target>

  <!-- =================================================================== -->
  <!-- Builds the demo webapp WAR, ready for deployment into a servlet     -->
  <!-- container (e.g. Tomcat).                                            -->
  <!-- =================================================================== -->
  <target name="webapp.war" depends="webapp" description="Builds playground WAR">
    <jar destfile="${dist.dir}/mathplayground.war" basedir="${build.webapp.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Defines Tomcat-related deployment tasks                             -->
  <!-- =================================================================== -->
  <target name="init.tomcat.tasks">
    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"
      classpath="${uk.ac.ed.ph.mathplayground.tomcat.home}/server/lib/catalina-ant.jar"/>
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"
      classpath="${uk.ac.ed.ph.mathplayground.tomcat.home}/server/lib/catalina-ant.jar"/>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"
      classpath="${uk.ac.ed.ph.mathplayground.tomcat.home}/server/lib/catalina-ant.jar"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates a developer's version of the Tomcat context XML which can   -->
  <!-- be directly dropped into a running Tomcat to deploy and run the     -->
  <!-- webapp from the build folder. This is handy for development.        -->
  <!-- =================================================================== -->
  <target name="tomcat.context.xml" depends="webapp">
     <copy file="${build.webapp.dir}/META-INF/context.xml"
       tofile="${build.dir}/${uk.ac.ed.ph.mathplayground.tomcat.context.path}.xml"/>
     <replace file="${build.dir}/${uk.ac.ed.ph.mathplayground.tomcat.context.path}.xml"
       token='&lt;Context path'
       value='&lt;Context docBase="${build.webapp.dir}" reloadable="true" path'/>
  </target>

  <!-- =================================================================== -->
  <!-- Deploys the Aardvark webapp to Tomcat                               -->
  <!-- =================================================================== -->
  <!-- (This only works on Tomcat 5.5+) -->
  <target name="deploy" depends="tomcat.context.xml,init.tomcat.tasks">
    <deploy url="${uk.ac.ed.ph.mathplayground.tomcat.manager.url}"
      config="${build.dir}/${uk.ac.ed.ph.mathplayground.tomcat.context.path}.xml"
      username="${uk.ac.ed.ph.mathplayground.tomcat.manager.username}"
      password="${uk.ac.ed.ph.mathplayground.tomcat.manager.password}"
      path="${uk.ac.ed.ph.mathplayground.tomcat.context.path}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Undeploys a previously deployed Aardvark webapp                     -->
  <!-- =================================================================== -->
  <target name="undeploy" depends="init.tomcat.tasks">
    <undeploy url="${uk.ac.ed.ph.mathplayground.tomcat.manager.url}"
      username="${uk.ac.ed.ph.mathplayground.tomcat.manager.username}"
      password="${uk.ac.ed.ph.mathplayground.tomcat.manager.password}"
      path="${uk.ac.ed.ph.mathplayground.tomcat.context.path}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Reloads a previously deployed Aardvark webapp                       -->
  <!-- =================================================================== -->
  <target name="reload" depends="init.tomcat.tasks">
    <reload url="${uk.ac.ed.ph.mathplayground.tomcat.manager.url}"
      username="${uk.ac.ed.ph.mathplayground.tomcat.manager.username}"
      password="${uk.ac.ed.ph.mathplayground.tomcat.manager.password}"
      path="${uk.ac.ed.ph.mathplayground.tomcat.context.path}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans up the build directories                                     -->
  <!-- =================================================================== -->
  <target name="clean" description="Cleans out build directories">
    <delete includeemptydirs="true">
      <fileset dir="${build.dir}" includes="**/*"/>
      <fileset dir="${dist.dir}" includes="**/*"/>
    </delete>
  </target>

</project>
